---
interface Props {
	title: string;
}

const { title } = Astro.props;
import { basics } from "@cv";
const { label } = basics;

import DarkIcon from "@/icons/DarkIcon.astro";
import LightIcon from "@/icons/LightIcon.astro";
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content=`${label}` />
		<meta name="viewport" content="width=device-width" />
		<link
			rel="icon"
			type="image/svg+xml"
			href="https://img.icons8.com/sf-black-filled/64/FFFFFF/code.png"
		/>
		<title>{title}</title>
	</head>
	<body class="bg-white dark:bg-gray-900">
		<div class="mx-auto w-1/2 flex justify-center xl:justify-end">
			<button
				id="theme-toggle"
				class="fixed z-50 bottom-2 p-1 bg-zinc-100 dark:bg-zinc-900 text-black dark:text-white rounded-full"
			>
				<DarkIcon />
				<LightIcon />
			</button>
		</div>
		<slot />
	</body>
</html>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const html = document.documentElement;
		const themeButton = document.getElementById("theme-toggle");
		const lightIcon = document.getElementById("light-icon");
		const darkIcon = document.getElementById("dark-icon");

		// function to update the icon deppending the theme
		const updateButtonIcon = () => {
			const isDarkMode = html.classList.contains("dark");
			if (isDarkMode) {
				lightIcon.classList.add("hidden");
				darkIcon.classList.remove("hidden");
			} else {
				darkIcon.classList.add("hidden");
				lightIcon.classList.remove("hidden");
			}
		};

		// update icon to load
		updateButtonIcon();

		const toggleTheme = () => {
			const isDarkMode = html.classList.toggle("dark");
			localStorage.theme = isDarkMode ? "dark" : "light";
			updateButtonIcon();
		};

		if (themeButton) {
			themeButton.addEventListener("click", toggleTheme);
		}
	});
</script>

<style is:global>
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}
	html {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			"Courier new",
			Courier;
		letter-spacing: -0.025rem;
	}

	body,
	figure {
		margin: 0;
		padding: 0;
	}

	a {
		text-decoration: none;
	}

	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	h1,
	h2,
	h3,
	h4,
	h5 {
		font-family:
			system-ui,
			-apple-system,
			BlinkMacSystemFont,
			"Segoe UI",
			Roboto,
			Oxygen,
			Ubuntu,
			Cantarell,
			"Open Sans",
			"Helvetica Neue",
			sans-serif;
		margin: 0;
	}

	p {
		color: #777;
		font-size: 0.8rem;
		line-height: 1.5;
		margin: 0;
		text-wrap: pretty;
	}

	.print {
		display: none !important;
	}

	@media print {
		.no-print {
			display: none !important;
		}

		.print {
			color: #888888;
			display: block !important;
			font-size: 0.55rem;
		}

		ninja-keys {
			display: none;
		}
	}
</style>
